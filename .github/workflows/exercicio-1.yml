name: Criar diretório dev no Ubuntu

on:
  push:
    branches:
      - 1-exercício-1-diretorio-dev-front-end

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Checar o repositório
        uses: actions/checkout@v2

      - name: Configurar chave SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Criar diretório no servidor
        run: |
          set -e
          echo "Iniciando conexão SSH..."
          ssh -o StrictHostKeyChecking=no jaime@servidores-linux.70-71-bc-12-b3-87@cloud.shellhub.io "mkdir -p /home/jaime/dev/front-end"
          echo "Diretório /home/jaime/dev/front-end criado com sucesso!"

      - name: Criar Pull Request e fechar a Issue
        run: |
          set -e
          echo "Iniciando criação do PR e fechamento da issue..."

          # Definir variáveis
          REPO_OWNER=$(echo ${{ github.repository }} | cut -d '/' -f 1)
          REPO_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)
          BRANCH_HEAD="1-exercício-1-diretorio-dev-front-end"
          BRANCH_BASE="develop"
          TITLE="PR para adicionar diretório no servidor"
          BODY="Este PR adiciona o diretório /home/jaime/dev/front-end no servidor."

          echo "Variáveis:"
          echo "REPO_OWNER: $REPO_OWNER"
          echo "REPO_NAME: $REPO_NAME"
          echo "BRANCH_HEAD: $BRANCH_HEAD"
          echo "BRANCH_BASE: $BRANCH_BASE"
          echo "TITLE: $TITLE"
          echo "BODY: $BODY"

           # Criar Pull Request
          echo "Comando curl para criar PR:"
          echo "curl -s -X POST -H \"Authorization: token ${{ secrets.GITHUB_TOKEN }}\" -H \"Content-Type: application/json\" -d '{ \"head\": \"$BRANCH_HEAD\", \"base\": \"$BRANCH_BASE\", \"title\": \"$TITLE\", \"body\": \"$BODY\" }' \"https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls\""

          PR_RESPONSE=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"head\": \"$BRANCH_HEAD\",
              \"base\": \"$BRANCH_BASE\",
              \"title\": \"$TITLE\",
              \"body\": \"$BODY\"
            }" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls")
          
          echo "Resposta da API para criação do PR: $PR_RESPONSE"
          PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r .number)


          if [[ $(echo "$PR_RESPONSE" | jq -r '. | tonumber') == 201 ]]; then
            echo "Pull request criado com sucesso. Número: $PR_NUMBER"
          else
             echo "Erro ao criar o PR. Status code: $(echo "$PR_RESPONSE" | jq -r '. | tonumber')"
             exit 1
          fi
          # Fechar issue
           echo "Fechando Issue #1"
          
          echo "Comando curl para fechar Issue:"
          echo "curl -s -X PATCH -H \"Authorization: token ${{ secrets.GITHUB_TOKEN }}\" -H \"Content-Type: application/json\" -d '{ \"state\": \"closed\", \"body\": \"Fechando issue com o PR #$PR_NUMBER\" }' \"https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues/1\""

          ISSUE_RESPONSE=$(curl -s -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{ \"state\": \"closed\", \"body\": \"Fechando issue com o PR #$PR_NUMBER\" }" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues/1")
          
           echo "Resposta da API para fechamento da issue: $ISSUE_RESPONSE"
           if [[ $(echo "$ISSUE_RESPONSE" | jq -r '. | tonumber') == 200 ]]; then
             echo "Issue #1 fechada com sucesso."
           else
             echo "Erro ao fechar issue. Status code:  $(echo "$ISSUE_RESPONSE" | jq -r '. | tonumber')"
              exit 1
          fi